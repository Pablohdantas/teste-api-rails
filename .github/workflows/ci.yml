name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    # Configuração do Serviço PostgreSQL para o ambiente de testes
    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready" --health-interval 10s --health-timeout 5s --health-retries 5
        env:
          POSTGRES_DB: api_teste_test
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: password

    steps:
      - name: Install packages
        # Adicionando 'netcat' para que o comando 'nc' funcione no step de espera
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libyaml-dev pkg-config netcat

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      # NOVO STEP: Espera pela conexão do PostgreSQL para evitar o erro de 'race condition'
      - name: Wait for PostgreSQL
        run: |
          for i in $(seq 1 10); do
            nc -z postgres 5432 && echo "PostgreSQL started" && exit 0
            echo "Waiting for PostgreSQL ($i/10)..."
            sleep 1
          done
          echo "PostgreSQL did not start"
          exit 1
      
      - name: Run tests
        env:
          RAILS_ENV: test
          # Variáveis de ambiente que o seu config/database.yml espera
          DB_HOST: postgres 
          DB_USERNAME: runner
          DB_PASSWORD: password
        run: bin/rails db:test:prepare test